/**
 * Marlin 3D Printer Firmware
 * Copyright (c) 2020 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]
 *
 * Based on Sprinter and grbl.
 * Copyright (c) 2011 Camiel Gubbels / Erik van der Zalm
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 */
#pragma once

/**
 * Standard Marlin Boot Screen bitmaps
 *
 * Use the Marlin Bitmap Converter to make your own:
 * https://marlinfw.org/tools/u8glib/converter.html
 */

#include "../../inc/MarlinConfig.h"

#if ENABLED(SHOW_CUSTOM_BOOTSCREEN)

  #include "../../../_Bootscreen.h"

  #ifndef CUSTOM_BOOTSCREEN_BMP_BYTEWIDTH
    #define CUSTOM_BOOTSCREEN_BMP_BYTEWIDTH ((CUSTOM_BOOTSCREEN_BMPWIDTH + 7) / 8)
  #endif
  #ifndef CUSTOM_BOOTSCREEN_BMPHEIGHT
    #define CUSTOM_BOOTSCREEN_BMPHEIGHT (sizeof(custom_start_bmp) / (CUSTOM_BOOTSCREEN_BMP_BYTEWIDTH))
  #endif

#endif

#define START_BMPWIDTH      112

const unsigned char start_bmp[] PROGMEM = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x1F,0x00,0xF0,0x3F,0xFF,0xF8,0x1F,0x00,0x00,0x78,0x7C,0x1C,0x00,
  0x00,0x0E,0x00,0xC0,0x30,0x38,0x18,0x0E,0x00,0x00,0x30,0x38,0x18,0x00,
  0x00,0x07,0x00,0x80,0x60,0x38,0x0C,0x0E,0x00,0x00,0x38,0x18,0x10,0x00,
  0x00,0x03,0x81,0x00,0x40,0x38,0x00,0x0E,0x00,0x00,0x38,0x1C,0x10,0x00,
  0x00,0x01,0xC2,0x00,0x00,0x38,0x00,0x0E,0x00,0x00,0x18,0x1C,0x30,0x00,
  0x00,0x00,0xE4,0x00,0x00,0x38,0x00,0x0E,0x00,0x00,0x1C,0x3C,0x20,0x00,
  0x00,0x00,0x78,0x00,0x00,0x38,0x00,0x0E,0x00,0x00,0x1C,0x2C,0x20,0x00,
  0x00,0x00,0x38,0x00,0x00,0x38,0x00,0x0E,0x00,0x00,0x0C,0x6E,0x60,0x00,
  0x00,0x00,0x3C,0x00,0x00,0x38,0x00,0x0E,0x00,0x00,0x0C,0x4E,0x40,0x00,
  0x00,0x00,0x6E,0x00,0x00,0x38,0x00,0x0E,0x00,0x00,0x0E,0xC6,0x40,0x00,
  0x00,0x00,0xC7,0x00,0x00,0x38,0x00,0x0E,0x00,0x00,0x0E,0x86,0xC0,0x00,
  0x00,0x01,0x87,0x80,0x00,0x38,0x00,0x0E,0x00,0x00,0x07,0x87,0x80,0x00,
  0x00,0x03,0x03,0xC0,0x00,0x38,0x00,0x0E,0x00,0x04,0x07,0x83,0x80,0x00,
  0x00,0x06,0x01,0xC0,0x00,0x38,0x00,0x0E,0x00,0x08,0x07,0x03,0x80,0x00,
  0x00,0x0C,0x00,0xF0,0x00,0x38,0x00,0x0E,0x00,0x38,0x03,0x03,0x00,0x00,
  0x00,0x7E,0x01,0xFC,0x01,0xFF,0x00,0x7F,0xFF,0xF0,0x02,0x03,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

#ifndef START_BMP_BYTEWIDTH
  #define START_BMP_BYTEWIDTH ((START_BMPWIDTH + 7) / 8)
#endif
#ifndef START_BMPHEIGHT
  #define START_BMPHEIGHT (sizeof(start_bmp) / (START_BMP_BYTEWIDTH))
#endif

//static_assert(sizeof(start_bmp) == (START_BMP_BYTEWIDTH) * (START_BMPHEIGHT), "Bootscreen (start_bmp) dimensions don't match data.");
